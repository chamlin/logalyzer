diff --git a/Logalyzer/ParseState.pm b/Logalyzer/ParseState.pm
index e93a84f..b21fe6f 100644
--- a/Logalyzer/ParseState.pm
+++ b/Logalyzer/ParseState.pm
@@ -208,12 +208,34 @@ sub resolve_options {
     }
 }
 
+# get a line for fileinfo structure, classify it
 sub get_log_line {
-    my ($self, $file_info) = @_;
+    my ($self, $filename) = @_;
+    my $file_info = $self->{file_info}{$filename};
     my $fh = $file_info->{fh};
     unless ($fh) { die "Read on closed fh $filename.\n" }
-    $file_info->{current_line}{line} = <$fh>;
-    $self->classify_line ($file_info);
+
+    my $continue = 1;
+    while ($continue) {
+        # eventually, multiline events
+        my $line = <$fh>;
+        $file_info->{lines_read}++;
+        if (defined ($line)) {
+            $file_info->{current_line}{line} = $line;
+            $self->classify_line ($file_info);
+            # get out when you don't have junk
+            if ($file_info->{current_line}{events}[0]{classify} ne 'JUNK') {
+                $continue = 0;
+            }    
+        } else {
+            # eof
+            $file_info->{current_line}{line} = undef;
+            close $file_info->{fh};
+            delete $file_info->{fh};
+            $file_info->{empty} = 1;
+            $continue = 0;
+        }
+    }
 };
 
 
@@ -298,9 +320,12 @@ sub init_files {
             'filename' => $filename,
             'key' => $key,
             'fh' => $fh,
+            'lines_read' => 0,
         };
+        $self->{file_info}{$filename} = $file_info;
+        # read list, removed when done
         push @{$self->{logfh}}, $file_info;
-        $self->get_log_line ($file_info);
+        $self->get_log_line ($filename);
     }
 };
 
